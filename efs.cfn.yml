AWSTemplateFormatVersion: 2010-09-09
Description: Create elastic file system
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html

Parameters:
  Environment:
    Type: String
    Default: "production"
    Description: Deployment environment
    AllowedValues: ["development", "production", "testing"]
  TransitionToIA:
    Type: String
    Default: "AFTER_60_DAYS"
    Description: AWS EFS file transition to Infrequent Access
    AllowedValues:
      - AFTER_7_DAYS
      - AFTER_14_DAYS
      - AFTER_30_DAYS
      - AFTER_60_DAYS
      - AFTER_90_DAYS
      - AFTER_1_DAY
  PerformanceMode:
    Type: String
    Default: generalPurpose
    AllowedValues:
      - generalPurpose
      - maxIO
  SecurityGroupId:
    Type: String
    Description: Source security group ID
    Default: sg-00000000000000000
  SubnetId1:
    Type: AWS::EC2::Subnet::Id
    Description: EFS Mount target subnet
    Default: subnet-00000000000000000
  SubnetId2:
    Type: String
    Description: EFS Mount target subnet
    Default: subnet-00000000000000000
  SubnetId3:
    Type: String
    Description: EFS Mount target subnet
    Default: subnet-00000000000000000
  VpcId:
    Type: AWS::EC2::VPC::Id

Resources:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html
  # https://docs.aws.amazon.com/efs/latest/ug/iam-access-control-nfs-efs.html
  efsFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      #BackupPolicy: ""
      BypassPolicyLockoutSafetyCheck: false
      Encrypted: true
      #FileSystemPolicy:
      #FileSystemProtection:
      FileSystemTags:
        - {Key: sydney.edu.au/resTek/environment, Value: !Ref Environment}
      #KmsKeyId:
      LifecyclePolicies:
        - TransitionToIA: !Ref TransitionToIA
        - TransitionToPrimaryStorageClass: "AFTER_1_ACCESS"
      PerformanceMode: !Ref PerformanceMode
      #ProvisionedThroughputInMibps: 0.0
      ThroughputMode: bursting

  efsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: noSecurityGroupId
    Properties:
      GroupDescription: EFS mount access
      VpcId: !Ref VpcId
      Tags:
        - {Key: sydney.edu.au/ou, Value: Research Technology}
        - {Key: sydney.edu.au/resTek/environment, Value: !Ref Environment}

  securityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: hasSecurityGroupId
    Properties:
      Description: Allow NFSv4 access
      FromPort: 2049
      GroupId: !Ref efsSecurityGroup
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref SecurityGroupId
      ToPort: 2049

  mountTarget1:
    Type: AWS::EFS::MountTarget
    Condition: hasSubnetId1
    Properties:
      FileSystemId: !Ref efsFileSystem
      SubnetId: !Ref SubnetId1
      SecurityGroups:
        - !Ref efsSecurityGroup
  mountTarget2:
    Type: AWS::EFS::MountTarget
    Condition: hasSubnetId2
    Properties:
      FileSystemId: !Ref efsFileSystem
      SubnetId: !Ref SubnetId2
      SecurityGroups:
        - !Ref efsSecurityGroup
  mountTarget3:
    Type: AWS::EFS::MountTarget
    Condition: hasSubnetId3
    Properties:
      FileSystemId: !Ref efsFileSystem
      SubnetId: !Ref SubnetId3
      SecurityGroups:
        - !Ref efsSecurityGroup

Outputs:
  FileSystemId: {Description: File system ID, Value: !Ref efsFileSystem}
  VpcId: {Description: VPC ID, Value: !Ref VpcId}
  EfsPerformanceMode: {Description: EFS Performance Mode, Value: !Ref PerformanceMode}
  SecurityGroupId: {Description: Security group ID, Value: !Ref efsSecurityGroup}

Conditions:
  noSecurityGroupId: !Equals [sg-00000000000000000, !Ref SecurityGroupId]
  hasSecurityGroupId: !Not [!Equals [sg-00000000000000000, !Ref SecurityGroupId]]
  hasSubnetId1: !Not [!Equals [subnet-00000000000000000, !Ref SubnetId1]]
  hasSubnetId2: !Not [!Equals [subnet-00000000000000000, !Ref SubnetId2]]
  hasSubnetId3: !Not [!Equals [subnet-00000000000000000, !Ref SubnetId3]]
